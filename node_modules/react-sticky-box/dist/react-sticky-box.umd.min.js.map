{"version":3,"file":"react-sticky-box.umd.min.js","sources":["../node_modules/@babel/runtime/helpers/inheritsLoose.js","../node_modules/object-assign/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js","../src/index.js"],"sourcesContent":["function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nmodule.exports = _inheritsLoose;","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim\n  };\n\n  ReactPropTypes.checkPropTypes = emptyFunction;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&\n    Symbol.for &&\n    Symbol.for('react.element')) ||\n    0xeac7;\n\n  var isValidElement = function(object) {\n    return typeof object === 'object' &&\n      object !== null &&\n      object.$$typeof === REACT_ELEMENT_TYPE;\n  };\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(isValidElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\r\n * A collection of shims that provide minimal functionality of the ES6 collections.\r\n *\r\n * These implementations are not meant to be used outside of the ResizeObserver\r\n * modules as they cover only a limited range of use cases.\r\n */\n/* eslint-disable require-jsdoc, valid-jsdoc */\nvar MapShim = (function () {\n    if (typeof Map !== 'undefined') {\n        return Map;\n    }\n\n    /**\r\n     * Returns index in provided array that matches the specified key.\r\n     *\r\n     * @param {Array<Array>} arr\r\n     * @param {*} key\r\n     * @returns {number}\r\n     */\n    function getIndex(arr, key) {\n        var result = -1;\n\n        arr.some(function (entry, index) {\n            if (entry[0] === key) {\n                result = index;\n\n                return true;\n            }\n\n            return false;\n        });\n\n        return result;\n    }\n\n    return (function () {\n        function anonymous() {\n            this.__entries__ = [];\n        }\n\n        var prototypeAccessors = { size: { configurable: true } };\n\n        /**\r\n         * @returns {boolean}\r\n         */\n        prototypeAccessors.size.get = function () {\n            return this.__entries__.length;\n        };\n\n        /**\r\n         * @param {*} key\r\n         * @returns {*}\r\n         */\n        anonymous.prototype.get = function (key) {\n            var index = getIndex(this.__entries__, key);\n            var entry = this.__entries__[index];\n\n            return entry && entry[1];\n        };\n\n        /**\r\n         * @param {*} key\r\n         * @param {*} value\r\n         * @returns {void}\r\n         */\n        anonymous.prototype.set = function (key, value) {\n            var index = getIndex(this.__entries__, key);\n\n            if (~index) {\n                this.__entries__[index][1] = value;\n            } else {\n                this.__entries__.push([key, value]);\n            }\n        };\n\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\n        anonymous.prototype.delete = function (key) {\n            var entries = this.__entries__;\n            var index = getIndex(entries, key);\n\n            if (~index) {\n                entries.splice(index, 1);\n            }\n        };\n\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\n        anonymous.prototype.has = function (key) {\n            return !!~getIndex(this.__entries__, key);\n        };\n\n        /**\r\n         * @returns {void}\r\n         */\n        anonymous.prototype.clear = function () {\n            this.__entries__.splice(0);\n        };\n\n        /**\r\n         * @param {Function} callback\r\n         * @param {*} [ctx=null]\r\n         * @returns {void}\r\n         */\n        anonymous.prototype.forEach = function (callback, ctx) {\n            var this$1 = this;\n            if ( ctx === void 0 ) ctx = null;\n\n            for (var i = 0, list = this$1.__entries__; i < list.length; i += 1) {\n                var entry = list[i];\n\n                callback.call(ctx, entry[1], entry[0]);\n            }\n        };\n\n        Object.defineProperties( anonymous.prototype, prototypeAccessors );\n\n        return anonymous;\n    }());\n})();\n\n/**\r\n * Detects whether window and document objects are available in current environment.\r\n */\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && window.document === document;\n\n// Returns global object of a current environment.\nvar global$1 = (function () {\n    if (typeof global !== 'undefined' && global.Math === Math) {\n        return global;\n    }\n\n    if (typeof self !== 'undefined' && self.Math === Math) {\n        return self;\n    }\n\n    if (typeof window !== 'undefined' && window.Math === Math) {\n        return window;\n    }\n\n    // eslint-disable-next-line no-new-func\n    return Function('return this')();\n})();\n\n/**\r\n * A shim for the requestAnimationFrame which falls back to the setTimeout if\r\n * first one is not supported.\r\n *\r\n * @returns {number} Requests' identifier.\r\n */\nvar requestAnimationFrame$1 = (function () {\n    if (typeof requestAnimationFrame === 'function') {\n        // It's required to use a bounded function because IE sometimes throws\n        // an \"Invalid calling object\" error if rAF is invoked without the global\n        // object on the left hand side.\n        return requestAnimationFrame.bind(global$1);\n    }\n\n    return function (callback) { return setTimeout(function () { return callback(Date.now()); }, 1000 / 60); };\n})();\n\n// Defines minimum timeout before adding a trailing call.\nvar trailingTimeout = 2;\n\n/**\r\n * Creates a wrapper function which ensures that provided callback will be\r\n * invoked only once during the specified delay period.\r\n *\r\n * @param {Function} callback - Function to be invoked after the delay period.\r\n * @param {number} delay - Delay after which to invoke callback.\r\n * @returns {Function}\r\n */\nvar throttle = function (callback, delay) {\n    var leadingCall = false,\n        trailingCall = false,\n        lastCallTime = 0;\n\n    /**\r\n     * Invokes the original callback function and schedules new invocation if\r\n     * the \"proxy\" was called during current request.\r\n     *\r\n     * @returns {void}\r\n     */\n    function resolvePending() {\n        if (leadingCall) {\n            leadingCall = false;\n\n            callback();\n        }\n\n        if (trailingCall) {\n            proxy();\n        }\n    }\n\n    /**\r\n     * Callback invoked after the specified delay. It will further postpone\r\n     * invocation of the original function delegating it to the\r\n     * requestAnimationFrame.\r\n     *\r\n     * @returns {void}\r\n     */\n    function timeoutCallback() {\n        requestAnimationFrame$1(resolvePending);\n    }\n\n    /**\r\n     * Schedules invocation of the original function.\r\n     *\r\n     * @returns {void}\r\n     */\n    function proxy() {\n        var timeStamp = Date.now();\n\n        if (leadingCall) {\n            // Reject immediately following calls.\n            if (timeStamp - lastCallTime < trailingTimeout) {\n                return;\n            }\n\n            // Schedule new call to be in invoked when the pending one is resolved.\n            // This is important for \"transitions\" which never actually start\n            // immediately so there is a chance that we might miss one if change\n            // happens amids the pending invocation.\n            trailingCall = true;\n        } else {\n            leadingCall = true;\n            trailingCall = false;\n\n            setTimeout(timeoutCallback, delay);\n        }\n\n        lastCallTime = timeStamp;\n    }\n\n    return proxy;\n};\n\n// Minimum delay before invoking the update of observers.\nvar REFRESH_DELAY = 20;\n\n// A list of substrings of CSS properties used to find transition events that\n// might affect dimensions of observed elements.\nvar transitionKeys = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight'];\n\n// Check if MutationObserver is available.\nvar mutationObserverSupported = typeof MutationObserver !== 'undefined';\n\n/**\r\n * Singleton controller class which handles updates of ResizeObserver instances.\r\n */\nvar ResizeObserverController = function() {\n    this.connected_ = false;\n    this.mutationEventsAdded_ = false;\n    this.mutationsObserver_ = null;\n    this.observers_ = [];\n\n    this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);\n    this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);\n};\n\n/**\r\n * Adds observer to observers list.\r\n *\r\n * @param {ResizeObserverSPI} observer - Observer to be added.\r\n * @returns {void}\r\n */\n\n\n/**\r\n * Holds reference to the controller's instance.\r\n *\r\n * @private {ResizeObserverController}\r\n */\n\n\n/**\r\n * Keeps reference to the instance of MutationObserver.\r\n *\r\n * @private {MutationObserver}\r\n */\n\n/**\r\n * Indicates whether DOM listeners have been added.\r\n *\r\n * @private {boolean}\r\n */\nResizeObserverController.prototype.addObserver = function (observer) {\n    if (!~this.observers_.indexOf(observer)) {\n        this.observers_.push(observer);\n    }\n\n    // Add listeners if they haven't been added yet.\n    if (!this.connected_) {\n        this.connect_();\n    }\n};\n\n/**\r\n * Removes observer from observers list.\r\n *\r\n * @param {ResizeObserverSPI} observer - Observer to be removed.\r\n * @returns {void}\r\n */\nResizeObserverController.prototype.removeObserver = function (observer) {\n    var observers = this.observers_;\n    var index = observers.indexOf(observer);\n\n    // Remove observer if it's present in registry.\n    if (~index) {\n        observers.splice(index, 1);\n    }\n\n    // Remove listeners if controller has no connected observers.\n    if (!observers.length && this.connected_) {\n        this.disconnect_();\n    }\n};\n\n/**\r\n * Invokes the update of observers. It will continue running updates insofar\r\n * it detects changes.\r\n *\r\n * @returns {void}\r\n */\nResizeObserverController.prototype.refresh = function () {\n    var changesDetected = this.updateObservers_();\n\n    // Continue running updates if changes have been detected as there might\n    // be future ones caused by CSS transitions.\n    if (changesDetected) {\n        this.refresh();\n    }\n};\n\n/**\r\n * Updates every observer from observers list and notifies them of queued\r\n * entries.\r\n *\r\n * @private\r\n * @returns {boolean} Returns \"true\" if any observer has detected changes in\r\n *  dimensions of it's elements.\r\n */\nResizeObserverController.prototype.updateObservers_ = function () {\n    // Collect observers that have active observations.\n    var activeObservers = this.observers_.filter(function (observer) {\n        return observer.gatherActive(), observer.hasActive();\n    });\n\n    // Deliver notifications in a separate cycle in order to avoid any\n    // collisions between observers, e.g. when multiple instances of\n    // ResizeObserver are tracking the same element and the callback of one\n    // of them changes content dimensions of the observed target. Sometimes\n    // this may result in notifications being blocked for the rest of observers.\n    activeObservers.forEach(function (observer) { return observer.broadcastActive(); });\n\n    return activeObservers.length > 0;\n};\n\n/**\r\n * Initializes DOM listeners.\r\n *\r\n * @private\r\n * @returns {void}\r\n */\nResizeObserverController.prototype.connect_ = function () {\n    // Do nothing if running in a non-browser environment or if listeners\n    // have been already added.\n    if (!isBrowser || this.connected_) {\n        return;\n    }\n\n    // Subscription to the \"Transitionend\" event is used as a workaround for\n    // delayed transitions. This way it's possible to capture at least the\n    // final state of an element.\n    document.addEventListener('transitionend', this.onTransitionEnd_);\n\n    window.addEventListener('resize', this.refresh);\n\n    if (mutationObserverSupported) {\n        this.mutationsObserver_ = new MutationObserver(this.refresh);\n\n        this.mutationsObserver_.observe(document, {\n            attributes: true,\n            childList: true,\n            characterData: true,\n            subtree: true\n        });\n    } else {\n        document.addEventListener('DOMSubtreeModified', this.refresh);\n\n        this.mutationEventsAdded_ = true;\n    }\n\n    this.connected_ = true;\n};\n\n/**\r\n * Removes DOM listeners.\r\n *\r\n * @private\r\n * @returns {void}\r\n */\nResizeObserverController.prototype.disconnect_ = function () {\n    // Do nothing if running in a non-browser environment or if listeners\n    // have been already removed.\n    if (!isBrowser || !this.connected_) {\n        return;\n    }\n\n    document.removeEventListener('transitionend', this.onTransitionEnd_);\n    window.removeEventListener('resize', this.refresh);\n\n    if (this.mutationsObserver_) {\n        this.mutationsObserver_.disconnect();\n    }\n\n    if (this.mutationEventsAdded_) {\n        document.removeEventListener('DOMSubtreeModified', this.refresh);\n    }\n\n    this.mutationsObserver_ = null;\n    this.mutationEventsAdded_ = false;\n    this.connected_ = false;\n};\n\n/**\r\n * \"Transitionend\" event handler.\r\n *\r\n * @private\r\n * @param {TransitionEvent} event\r\n * @returns {void}\r\n */\nResizeObserverController.prototype.onTransitionEnd_ = function (ref) {\n        var propertyName = ref.propertyName; if ( propertyName === void 0 ) propertyName = '';\n\n    // Detect whether transition may affect dimensions of an element.\n    var isReflowProperty = transitionKeys.some(function (key) {\n        return !!~propertyName.indexOf(key);\n    });\n\n    if (isReflowProperty) {\n        this.refresh();\n    }\n};\n\n/**\r\n * Returns instance of the ResizeObserverController.\r\n *\r\n * @returns {ResizeObserverController}\r\n */\nResizeObserverController.getInstance = function () {\n    if (!this.instance_) {\n        this.instance_ = new ResizeObserverController();\n    }\n\n    return this.instance_;\n};\n\nResizeObserverController.instance_ = null;\n\n/**\r\n * Defines non-writable/enumerable properties of the provided target object.\r\n *\r\n * @param {Object} target - Object for which to define properties.\r\n * @param {Object} props - Properties to be defined.\r\n * @returns {Object} Target object.\r\n */\nvar defineConfigurable = (function (target, props) {\n    for (var i = 0, list = Object.keys(props); i < list.length; i += 1) {\n        var key = list[i];\n\n        Object.defineProperty(target, key, {\n            value: props[key],\n            enumerable: false,\n            writable: false,\n            configurable: true\n        });\n    }\n\n    return target;\n});\n\n/**\r\n * Returns the global object associated with provided element.\r\n *\r\n * @param {Object} target\r\n * @returns {Object}\r\n */\nvar getWindowOf = (function (target) {\n    // Assume that the element is an instance of Node, which means that it\n    // has the \"ownerDocument\" property from which we can retrieve a\n    // corresponding global object.\n    var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView;\n\n    // Return the local global object if it's not possible extract one from\n    // provided element.\n    return ownerGlobal || global$1;\n});\n\n// Placeholder of an empty content rectangle.\nvar emptyRect = createRectInit(0, 0, 0, 0);\n\n/**\r\n * Converts provided string to a number.\r\n *\r\n * @param {number|string} value\r\n * @returns {number}\r\n */\nfunction toFloat(value) {\n    return parseFloat(value) || 0;\n}\n\n/**\r\n * Extracts borders size from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @param {...string} positions - Borders positions (top, right, ...)\r\n * @returns {number}\r\n */\nfunction getBordersSize(styles) {\n    var positions = [], len = arguments.length - 1;\n    while ( len-- > 0 ) positions[ len ] = arguments[ len + 1 ];\n\n    return positions.reduce(function (size, position) {\n        var value = styles['border-' + position + '-width'];\n\n        return size + toFloat(value);\n    }, 0);\n}\n\n/**\r\n * Extracts paddings sizes from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @returns {Object} Paddings box.\r\n */\nfunction getPaddings(styles) {\n    var positions = ['top', 'right', 'bottom', 'left'];\n    var paddings = {};\n\n    for (var i = 0, list = positions; i < list.length; i += 1) {\n        var position = list[i];\n\n        var value = styles['padding-' + position];\n\n        paddings[position] = toFloat(value);\n    }\n\n    return paddings;\n}\n\n/**\r\n * Calculates content rectangle of provided SVG element.\r\n *\r\n * @param {SVGGraphicsElement} target - Element content rectangle of which needs\r\n *      to be calculated.\r\n * @returns {DOMRectInit}\r\n */\nfunction getSVGContentRect(target) {\n    var bbox = target.getBBox();\n\n    return createRectInit(0, 0, bbox.width, bbox.height);\n}\n\n/**\r\n * Calculates content rectangle of provided HTMLElement.\r\n *\r\n * @param {HTMLElement} target - Element for which to calculate the content rectangle.\r\n * @returns {DOMRectInit}\r\n */\nfunction getHTMLElementContentRect(target) {\n    // Client width & height properties can't be\n    // used exclusively as they provide rounded values.\n    var clientWidth = target.clientWidth;\n    var clientHeight = target.clientHeight;\n\n    // By this condition we can catch all non-replaced inline, hidden and\n    // detached elements. Though elements with width & height properties less\n    // than 0.5 will be discarded as well.\n    //\n    // Without it we would need to implement separate methods for each of\n    // those cases and it's not possible to perform a precise and performance\n    // effective test for hidden elements. E.g. even jQuery's ':visible' filter\n    // gives wrong results for elements with width & height less than 0.5.\n    if (!clientWidth && !clientHeight) {\n        return emptyRect;\n    }\n\n    var styles = getWindowOf(target).getComputedStyle(target);\n    var paddings = getPaddings(styles);\n    var horizPad = paddings.left + paddings.right;\n    var vertPad = paddings.top + paddings.bottom;\n\n    // Computed styles of width & height are being used because they are the\n    // only dimensions available to JS that contain non-rounded values. It could\n    // be possible to utilize the getBoundingClientRect if only it's data wasn't\n    // affected by CSS transformations let alone paddings, borders and scroll bars.\n    var width = toFloat(styles.width),\n        height = toFloat(styles.height);\n\n    // Width & height include paddings and borders when the 'border-box' box\n    // model is applied (except for IE).\n    if (styles.boxSizing === 'border-box') {\n        // Following conditions are required to handle Internet Explorer which\n        // doesn't include paddings and borders to computed CSS dimensions.\n        //\n        // We can say that if CSS dimensions + paddings are equal to the \"client\"\n        // properties then it's either IE, and thus we don't need to subtract\n        // anything, or an element merely doesn't have paddings/borders styles.\n        if (Math.round(width + horizPad) !== clientWidth) {\n            width -= getBordersSize(styles, 'left', 'right') + horizPad;\n        }\n\n        if (Math.round(height + vertPad) !== clientHeight) {\n            height -= getBordersSize(styles, 'top', 'bottom') + vertPad;\n        }\n    }\n\n    // Following steps can't be applied to the document's root element as its\n    // client[Width/Height] properties represent viewport area of the window.\n    // Besides, it's as well not necessary as the <html> itself neither has\n    // rendered scroll bars nor it can be clipped.\n    if (!isDocumentElement(target)) {\n        // In some browsers (only in Firefox, actually) CSS width & height\n        // include scroll bars size which can be removed at this step as scroll\n        // bars are the only difference between rounded dimensions + paddings\n        // and \"client\" properties, though that is not always true in Chrome.\n        var vertScrollbar = Math.round(width + horizPad) - clientWidth;\n        var horizScrollbar = Math.round(height + vertPad) - clientHeight;\n\n        // Chrome has a rather weird rounding of \"client\" properties.\n        // E.g. for an element with content width of 314.2px it sometimes gives\n        // the client width of 315px and for the width of 314.7px it may give\n        // 314px. And it doesn't happen all the time. So just ignore this delta\n        // as a non-relevant.\n        if (Math.abs(vertScrollbar) !== 1) {\n            width -= vertScrollbar;\n        }\n\n        if (Math.abs(horizScrollbar) !== 1) {\n            height -= horizScrollbar;\n        }\n    }\n\n    return createRectInit(paddings.left, paddings.top, width, height);\n}\n\n/**\r\n * Checks whether provided element is an instance of the SVGGraphicsElement.\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\nvar isSVGGraphicsElement = (function () {\n    // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement\n    // interface.\n    if (typeof SVGGraphicsElement !== 'undefined') {\n        return function (target) { return target instanceof getWindowOf(target).SVGGraphicsElement; };\n    }\n\n    // If it's so, then check that element is at least an instance of the\n    // SVGElement and that it has the \"getBBox\" method.\n    // eslint-disable-next-line no-extra-parens\n    return function (target) { return target instanceof getWindowOf(target).SVGElement && typeof target.getBBox === 'function'; };\n})();\n\n/**\r\n * Checks whether provided element is a document element (<html>).\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\nfunction isDocumentElement(target) {\n    return target === getWindowOf(target).document.documentElement;\n}\n\n/**\r\n * Calculates an appropriate content rectangle for provided html or svg element.\r\n *\r\n * @param {Element} target - Element content rectangle of which needs to be calculated.\r\n * @returns {DOMRectInit}\r\n */\nfunction getContentRect(target) {\n    if (!isBrowser) {\n        return emptyRect;\n    }\n\n    if (isSVGGraphicsElement(target)) {\n        return getSVGContentRect(target);\n    }\n\n    return getHTMLElementContentRect(target);\n}\n\n/**\r\n * Creates rectangle with an interface of the DOMRectReadOnly.\r\n * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly\r\n *\r\n * @param {DOMRectInit} rectInit - Object with rectangle's x/y coordinates and dimensions.\r\n * @returns {DOMRectReadOnly}\r\n */\nfunction createReadOnlyRect(ref) {\n    var x = ref.x;\n    var y = ref.y;\n    var width = ref.width;\n    var height = ref.height;\n\n    // If DOMRectReadOnly is available use it as a prototype for the rectangle.\n    var Constr = typeof DOMRectReadOnly !== 'undefined' ? DOMRectReadOnly : Object;\n    var rect = Object.create(Constr.prototype);\n\n    // Rectangle's properties are not writable and non-enumerable.\n    defineConfigurable(rect, {\n        x: x, y: y, width: width, height: height,\n        top: y,\n        right: x + width,\n        bottom: height + y,\n        left: x\n    });\n\n    return rect;\n}\n\n/**\r\n * Creates DOMRectInit object based on the provided dimensions and the x/y coordinates.\r\n * Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit\r\n *\r\n * @param {number} x - X coordinate.\r\n * @param {number} y - Y coordinate.\r\n * @param {number} width - Rectangle's width.\r\n * @param {number} height - Rectangle's height.\r\n * @returns {DOMRectInit}\r\n */\nfunction createRectInit(x, y, width, height) {\n    return { x: x, y: y, width: width, height: height };\n}\n\n/**\r\n * Class that is responsible for computations of the content rectangle of\r\n * provided DOM element and for keeping track of it's changes.\r\n */\nvar ResizeObservation = function(target) {\n    this.broadcastWidth = 0;\n    this.broadcastHeight = 0;\n    this.contentRect_ = createRectInit(0, 0, 0, 0);\n\n    this.target = target;\n};\n\n/**\r\n * Updates content rectangle and tells whether it's width or height properties\r\n * have changed since the last broadcast.\r\n *\r\n * @returns {boolean}\r\n */\n\n\n/**\r\n * Reference to the last observed content rectangle.\r\n *\r\n * @private {DOMRectInit}\r\n */\n\n\n/**\r\n * Broadcasted width of content rectangle.\r\n *\r\n * @type {number}\r\n */\nResizeObservation.prototype.isActive = function () {\n    var rect = getContentRect(this.target);\n\n    this.contentRect_ = rect;\n\n    return rect.width !== this.broadcastWidth || rect.height !== this.broadcastHeight;\n};\n\n/**\r\n * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data\r\n * from the corresponding properties of the last observed content rectangle.\r\n *\r\n * @returns {DOMRectInit} Last observed content rectangle.\r\n */\nResizeObservation.prototype.broadcastRect = function () {\n    var rect = this.contentRect_;\n\n    this.broadcastWidth = rect.width;\n    this.broadcastHeight = rect.height;\n\n    return rect;\n};\n\nvar ResizeObserverEntry = function(target, rectInit) {\n    var contentRect = createReadOnlyRect(rectInit);\n\n    // According to the specification following properties are not writable\n    // and are also not enumerable in the native implementation.\n    //\n    // Property accessors are not being used as they'd require to define a\n    // private WeakMap storage which may cause memory leaks in browsers that\n    // don't support this type of collections.\n    defineConfigurable(this, { target: target, contentRect: contentRect });\n};\n\nvar ResizeObserverSPI = function(callback, controller, callbackCtx) {\n    this.activeObservations_ = [];\n    this.observations_ = new MapShim();\n\n    if (typeof callback !== 'function') {\n        throw new TypeError('The callback provided as parameter 1 is not a function.');\n    }\n\n    this.callback_ = callback;\n    this.controller_ = controller;\n    this.callbackCtx_ = callbackCtx;\n};\n\n/**\r\n * Starts observing provided element.\r\n *\r\n * @param {Element} target - Element to be observed.\r\n * @returns {void}\r\n */\n\n\n/**\r\n * Registry of the ResizeObservation instances.\r\n *\r\n * @private {Map<Element, ResizeObservation>}\r\n */\n\n\n/**\r\n * Public ResizeObserver instance which will be passed to the callback\r\n * function and used as a value of it's \"this\" binding.\r\n *\r\n * @private {ResizeObserver}\r\n */\n\n/**\r\n * Collection of resize observations that have detected changes in dimensions\r\n * of elements.\r\n *\r\n * @private {Array<ResizeObservation>}\r\n */\nResizeObserverSPI.prototype.observe = function (target) {\n    if (!arguments.length) {\n        throw new TypeError('1 argument required, but only 0 present.');\n    }\n\n    // Do nothing if current environment doesn't have the Element interface.\n    if (typeof Element === 'undefined' || !(Element instanceof Object)) {\n        return;\n    }\n\n    if (!(target instanceof getWindowOf(target).Element)) {\n        throw new TypeError('parameter 1 is not of type \"Element\".');\n    }\n\n    var observations = this.observations_;\n\n    // Do nothing if element is already being observed.\n    if (observations.has(target)) {\n        return;\n    }\n\n    observations.set(target, new ResizeObservation(target));\n\n    this.controller_.addObserver(this);\n\n    // Force the update of observations.\n    this.controller_.refresh();\n};\n\n/**\r\n * Stops observing provided element.\r\n *\r\n * @param {Element} target - Element to stop observing.\r\n * @returns {void}\r\n */\nResizeObserverSPI.prototype.unobserve = function (target) {\n    if (!arguments.length) {\n        throw new TypeError('1 argument required, but only 0 present.');\n    }\n\n    // Do nothing if current environment doesn't have the Element interface.\n    if (typeof Element === 'undefined' || !(Element instanceof Object)) {\n        return;\n    }\n\n    if (!(target instanceof getWindowOf(target).Element)) {\n        throw new TypeError('parameter 1 is not of type \"Element\".');\n    }\n\n    var observations = this.observations_;\n\n    // Do nothing if element is not being observed.\n    if (!observations.has(target)) {\n        return;\n    }\n\n    observations.delete(target);\n\n    if (!observations.size) {\n        this.controller_.removeObserver(this);\n    }\n};\n\n/**\r\n * Stops observing all elements.\r\n *\r\n * @returns {void}\r\n */\nResizeObserverSPI.prototype.disconnect = function () {\n    this.clearActive();\n    this.observations_.clear();\n    this.controller_.removeObserver(this);\n};\n\n/**\r\n * Collects observation instances the associated element of which has changed\r\n * it's content rectangle.\r\n *\r\n * @returns {void}\r\n */\nResizeObserverSPI.prototype.gatherActive = function () {\n        var this$1 = this;\n\n    this.clearActive();\n\n    this.observations_.forEach(function (observation) {\n        if (observation.isActive()) {\n            this$1.activeObservations_.push(observation);\n        }\n    });\n};\n\n/**\r\n * Invokes initial callback function with a list of ResizeObserverEntry\r\n * instances collected from active resize observations.\r\n *\r\n * @returns {void}\r\n */\nResizeObserverSPI.prototype.broadcastActive = function () {\n    // Do nothing if observer doesn't have active observations.\n    if (!this.hasActive()) {\n        return;\n    }\n\n    var ctx = this.callbackCtx_;\n\n    // Create ResizeObserverEntry instance for every active observation.\n    var entries = this.activeObservations_.map(function (observation) {\n        return new ResizeObserverEntry(observation.target, observation.broadcastRect());\n    });\n\n    this.callback_.call(ctx, entries, ctx);\n    this.clearActive();\n};\n\n/**\r\n * Clears the collection of active observations.\r\n *\r\n * @returns {void}\r\n */\nResizeObserverSPI.prototype.clearActive = function () {\n    this.activeObservations_.splice(0);\n};\n\n/**\r\n * Tells whether observer has active observations.\r\n *\r\n * @returns {boolean}\r\n */\nResizeObserverSPI.prototype.hasActive = function () {\n    return this.activeObservations_.length > 0;\n};\n\n// Registry of internal observers. If WeakMap is not available use current shim\n// for the Map collection as it has all required methods and because WeakMap\n// can't be fully polyfilled anyway.\nvar observers = typeof WeakMap !== 'undefined' ? new WeakMap() : new MapShim();\n\n/**\r\n * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation\r\n * exposing only those methods and properties that are defined in the spec.\r\n */\nvar ResizeObserver = function(callback) {\n    if (!(this instanceof ResizeObserver)) {\n        throw new TypeError('Cannot call a class as a function.');\n    }\n    if (!arguments.length) {\n        throw new TypeError('1 argument required, but only 0 present.');\n    }\n\n    var controller = ResizeObserverController.getInstance();\n    var observer = new ResizeObserverSPI(callback, controller, this);\n\n    observers.set(this, observer);\n};\n\n// Expose public methods of ResizeObserver.\n['observe', 'unobserve', 'disconnect'].forEach(function (method) {\n    ResizeObserver.prototype[method] = function () {\n        return (ref = observers.get(this))[method].apply(ref, arguments);\n        var ref;\n    };\n});\n\nvar index = (function () {\n    // Export existing implementation if available.\n    if (typeof global$1.ResizeObserver !== 'undefined') {\n        return global$1.ResizeObserver;\n    }\n\n    return ResizeObserver;\n})();\n\nexport default index;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ResizeObserver from \"resize-observer-polyfill\";\n\nconst getScrollParent = node => {\n  let parent = node;\n  while ((parent = parent.parentElement)) {\n    const overflowYVal = getComputedStyle(parent, null).getPropertyValue(\"overflow-y\");\n    if (overflowYVal === \"auto\" || overflowYVal === \"scroll\") return parent;\n  }\n  return window;\n};\n\nconst offsetTill = (node, target) => {\n  let current = node;\n  let offset = 0;\n  // If target is not an offsetParent itself, subtract its offsetTop and set correct target\n  if (target.firstChild && target.firstChild.offsetParent !== target) {\n    offset += node.offsetTop - target.offsetTop;\n    target = node.offsetParent;\n    offset += -node.offsetTop;\n  }\n  do {\n    offset += current.offsetTop;\n    current = current.offsetParent;\n  } while (current && current !== target);\n  return offset;\n};\n\nlet stickyProp = null;\nif (typeof CSS !== \"undefined\" && CSS.supports) {\n  if (CSS.supports(\"position\", \"sticky\")) stickyProp = \"sticky\";\n  else if (CSS.supports(\"position\", \"-webkit-sticky\")) stickyProp = \"-webkit-sticky\";\n}\n\n// Inspired by https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md#feature-detection\nlet passiveArg = false;\ntry {\n  var opts = Object.defineProperty({}, \"passive\", {\n    // eslint-disable-next-line getter-return\n    get() {\n      passiveArg = {passive: true};\n    },\n  });\n  window.addEventListener(\"testPassive\", null, opts);\n  window.removeEventListener(\"testPassive\", null, opts);\n} catch (e) {}\n\nexport default class StickyBox extends React.Component {\n  constructor(props) {\n    super(props);\n    if (props.offset && process.env.NODE_ENV !== \"production\") {\n      console.warn(\n        `react-sticky-box's \"offset\" prop is deprecated. Please use \"offsetTop\" instead. It'll be removed in v0.8.`\n      );\n    }\n  }\n\n  getOffsets() {\n    const {offset: deprecatedOffset, offsetTop: propOffsetTop, offsetBottom} = this.props;\n    return {\n      offsetTop: propOffsetTop || deprecatedOffset,\n      offsetBottom,\n    };\n  }\n\n  registerContainerRef = n => {\n    if (!stickyProp) return;\n    this.node = n;\n    if (n) {\n      this.scrollPane = getScrollParent(this.node);\n      this.latestScrollY = this.scrollPane === window ? window.scrollY : this.scrollPane.scrollTop;\n\n      this.scrollPane.addEventListener(\"scroll\", this.handleScroll, passiveArg);\n      this.scrollPane.addEventListener(\"mousewheel\", this.handleScroll, passiveArg);\n      if (this.scrollPane === window) {\n        window.addEventListener(\"resize\", this.updateViewport);\n        this.updateViewport();\n      } else {\n        this.rosp = new ResizeObserver(this.updateScrollPane);\n        this.rosp.observe(this.scrollPane);\n        this.updateScrollPane();\n      }\n      this.ropn = new ResizeObserver(this.updateParentNode);\n      this.ropn.observe(this.node.parentNode);\n      this.updateParentNode();\n\n      this.ron = new ResizeObserver(this.updateNode);\n      this.ron.observe(this.node);\n      this.updateNode({initial: true});\n\n      this.initial();\n    } else {\n      this.scrollPane.removeEventListener(\"mousewheel\", this.handleScroll, passiveArg);\n      this.scrollPane.removeEventListener(\"scroll\", this.handleScroll, passiveArg);\n      if (this.scrollPane === window) {\n        window.removeEventListener(\"resize\", this.getMeasurements);\n      } else {\n        this.rosp.disconnect();\n      }\n      this.ropn.disconnect();\n      this.ron.disconnect();\n      this.scrollPane = null;\n    }\n  };\n\n  initial() {\n    const {bottom} = this.props;\n    const {offsetTop, offsetBottom} = this.getOffsets();\n    if (bottom) {\n      if (this.mode !== \"stickyBottom\") {\n        this.props.onChangeMode(this.mode, \"stickyBottom\");\n        this.mode = \"stickyBottom\";\n        this.node.style.position = stickyProp;\n        this.node.style.top = `${this.viewPortHeight - this.nodeHeight - offsetBottom}px`;\n      }\n    } else {\n      if (this.mode !== \"stickyTop\") {\n        this.props.onChangeMode(this.mode, \"stickyTop\");\n        this.mode = \"stickyTop\";\n        this.node.style.position = stickyProp;\n        this.node.style.top = `${offsetTop}px`;\n      }\n    }\n  }\n\n  updateViewport = () => {\n    this.viewPortHeight = window.innerHeight;\n    this.scrollPaneOffset = 0;\n  };\n\n  updateScrollPane = () => {\n    this.viewPortHeight = this.scrollPane.offsetHeight;\n    if (process.env.NODE_ENV !== \"production\" && this.viewPortHeight === 0) {\n      console.warn(\n        `react-sticky-box's scroll pane has a height of 0. This seems odd. Please check this node:`,\n        this.scrollPane\n      );\n    }\n    // Only applicable if scrollPane is an offsetParent\n    if (this.scrollPane.firstChild.offsetParent === this.scrollPane) {\n      this.scrollPaneOffset = this.scrollPane.getBoundingClientRect().top;\n    } else {\n      this.scrollPaneOffset = 0;\n    }\n  };\n\n  updateParentNode = () => {\n    const parentNode = this.node.parentNode;\n    const computedParentStyle = getComputedStyle(parentNode, null);\n    const parentPaddingTop = parseInt(computedParentStyle.getPropertyValue(\"padding-top\"), 10);\n    const parentPaddingBottom = parseInt(\n      computedParentStyle.getPropertyValue(\"padding-bottom\"),\n      10\n    );\n    const verticalParentPadding = parentPaddingTop + parentPaddingBottom;\n    this.naturalTop =\n      offsetTill(parentNode, this.scrollPane) + parentPaddingTop + this.scrollPaneOffset;\n    this.parentHeight = parentNode.getBoundingClientRect().height - verticalParentPadding;\n  };\n\n  updateNode = ({initial} = {}) => {\n    const prevHeight = this.nodeHeight;\n    this.nodeHeight = this.node.getBoundingClientRect().height;\n    if (!initial && prevHeight !== this.nodeHeight) {\n      this.mode = undefined;\n      const {offsetTop, offsetBottom} = this.getOffsets();\n      if (this.nodeHeight + offsetTop + offsetBottom <= this.viewPortHeight) {\n        // Just make it sticky if node smaller than viewport\n        this.initial();\n        return;\n      } else {\n        this.mode = \"relative\";\n        this.node.style.position = \"relative\";\n        const lowestPossible = this.parentHeight - this.nodeHeight;\n        const current = this.scrollPaneOffset + this.latestScrollY - this.naturalTop + offsetTop;\n        this.offset = Math.max(0, Math.min(lowestPossible, current));\n        this.node.style.top = `${this.offset}px`;\n      }\n    }\n  };\n\n  handleScroll = () => {\n    const {offsetTop, offsetBottom} = this.getOffsets();\n    const scrollY = this.scrollPane === window ? window.scrollY : this.scrollPane.scrollTop;\n    if (scrollY === this.latestScrollY) return;\n    if (this.nodeHeight + offsetTop + offsetBottom <= this.viewPortHeight) {\n      // Just make it sticky if node smaller than viewport\n      this.initial();\n      this.latestScrollY = scrollY;\n      return;\n    }\n    const scrollDelta = scrollY - this.latestScrollY;\n    if (scrollDelta > 0) {\n      // scroll down\n      if (this.mode === \"stickyTop\") {\n        this.offset = Math.max(\n          0,\n          this.scrollPaneOffset + this.latestScrollY - this.naturalTop + offsetTop\n        );\n        if (scrollY + this.scrollPaneOffset + offsetTop > this.naturalTop) {\n          if (\n            scrollY + this.scrollPaneOffset + this.viewPortHeight <=\n            this.naturalTop + this.nodeHeight + this.offset + offsetBottom\n          ) {\n            this.props.onChangeMode(this.mode, \"relative\");\n            this.mode = \"relative\";\n            this.node.style.position = \"relative\";\n            this.node.style.top = `${this.offset}px`;\n          } else {\n            this.switchToStickyBottom();\n          }\n        }\n      } else if (this.mode === \"relative\") {\n        if (\n          scrollY + this.scrollPaneOffset + this.viewPortHeight >\n          this.naturalTop + this.nodeHeight + this.offset + offsetBottom\n        ) {\n          this.switchToStickyBottom();\n        }\n      }\n    } else {\n      // scroll up\n      if (this.mode === \"stickyBottom\") {\n        this.offset = Math.max(\n          0,\n          this.scrollPaneOffset +\n            this.latestScrollY +\n            this.viewPortHeight -\n            (this.naturalTop + this.nodeHeight + offsetBottom)\n        );\n        if (\n          this.scrollPaneOffset + scrollY + this.viewPortHeight <\n          this.naturalTop + this.parentHeight + offsetBottom\n        ) {\n          if (this.scrollPaneOffset + scrollY + offsetTop >= this.naturalTop + this.offset) {\n            this.props.onChangeMode(this.mode, \"relative\");\n            this.mode = \"relative\";\n            this.node.style.position = \"relative\";\n            this.node.style.top = `${this.offset}px`;\n          } else {\n            this.switchToStickyTop();\n          }\n        }\n      } else if (this.mode === \"relative\") {\n        if (this.scrollPaneOffset + scrollY + offsetTop < this.naturalTop + this.offset) {\n          this.switchToStickyTop();\n        }\n      }\n    }\n\n    this.latestScrollY = scrollY;\n  };\n\n  switchToStickyBottom = () => {\n    const {_, offsetBottom} = this.getOffsets();\n    this.props.onChangeMode(this.mode, \"stickyBottom\");\n    this.mode = \"stickyBottom\";\n    this.node.style.position = stickyProp;\n    this.node.style.top = `${this.viewPortHeight - this.nodeHeight - offsetBottom}px`;\n  };\n\n  switchToStickyTop = () => {\n    const {offsetTop, _} = this.getOffsets();\n    this.props.onChangeMode(this.mode, \"stickyTop\");\n    this.mode = \"stickyTop\";\n    this.node.style.position = stickyProp;\n    this.node.style.top = `${offsetTop}px`;\n  };\n\n  render() {\n    const {children, className, style} = this.props;\n    return (\n      <div className={className} style={style} ref={this.registerContainerRef}>\n        {children}\n      </div>\n    );\n  }\n}\n\nStickyBox.defaultProps = {\n  onChangeMode: () => {},\n  offset: 0,\n  offsetTop: 0,\n  offsetBottom: 0,\n};\n\nStickyBox.propTypes = {\n  onChangeMode: PropTypes.func,\n  offset: PropTypes.number, // deprecated\n  offsetTop: PropTypes.number,\n  offsetBottom: PropTypes.number,\n  bottom: PropTypes.bool,\n};\n"],"names":["subClass","superClass","prototype","Object","create","constructor","__proto__","getOwnPropertySymbols","hasOwnProperty","propIsEnumerable","propertyIsEnumerable","assign","test1","String","getOwnPropertyNames","test2","i","fromCharCode","map","n","join","test3","split","forEach","letter","keys","err","shouldUseNative","emptyFunction","module","shim","props","propName","componentName","location","propFullName","secret","ReactPropTypesSecret","Error","name","getShim","isRequired","ReactPropTypes","array","bool","func","number","object","string","symbol","any","arrayOf","element","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes","require$$1","MapShim","Map","getIndex","arr","key","result","some","entry","index","anonymous","this","__entries__","prototypeAccessors","size","configurable","get","length","set","value","push","delete","entries","splice","has","clear","callback","ctx","list","call","defineProperties","isBrowser","window","document","global$1","global","Math","self","Function","requestAnimationFrame$1","requestAnimationFrame","bind","setTimeout","Date","now","trailingTimeout","transitionKeys","mutationObserverSupported","MutationObserver","ResizeObserverController","connected_","mutationEventsAdded_","mutationsObserver_","observers_","onTransitionEnd_","refresh","delay","leadingCall","trailingCall","lastCallTime","resolvePending","proxy","timeoutCallback","timeStamp","throttle","addObserver","observer","indexOf","connect_","removeObserver","observers","disconnect_","updateObservers_","activeObservers","filter","gatherActive","hasActive","broadcastActive","addEventListener","observe","attributes","childList","characterData","subtree","removeEventListener","disconnect","ref","propertyName","getInstance","instance_","defineConfigurable","target","defineProperty","enumerable","writable","getWindowOf","ownerDocument","defaultView","emptyRect","createRectInit","toFloat","parseFloat","getBordersSize","styles","positions","len","arguments","reduce","position","getHTMLElementContentRect","clientWidth","clientHeight","getComputedStyle","paddings","getPaddings","horizPad","left","right","vertPad","top","bottom","width","height","boxSizing","round","documentElement","isDocumentElement","vertScrollbar","horizScrollbar","abs","isSVGGraphicsElement","SVGGraphicsElement","SVGElement","getBBox","getContentRect","bbox","getSVGContentRect","x","y","ResizeObservation","broadcastWidth","broadcastHeight","contentRect_","isActive","rect","broadcastRect","ResizeObserverEntry","rectInit","Constr","contentRect","DOMRectReadOnly","ResizeObserverSPI","controller","callbackCtx","activeObservations_","observations_","TypeError","callback_","controller_","callbackCtx_","Element","observations","unobserve","clearActive","this$1","observation","WeakMap","ResizeObserver","method","apply","getScrollParent","parent","parentElement","overflowYVal","getPropertyValue","offsetTill","current","offset","firstChild","offsetParent","offsetTop","stickyProp","CSS","supports","passiveArg","opts","passive","e","StickyBox","_React$Component","registerContainerRef","scrollPane","_this","latestScrollY","scrollY","scrollTop","handleScroll","updateViewport","rosp","updateScrollPane","ropn","updateParentNode","parentNode","ron","updateNode","initial","getMeasurements","viewPortHeight","innerHeight","scrollPaneOffset","offsetHeight","getBoundingClientRect","computedParentStyle","parentPaddingTop","parseInt","parentPaddingBottom","naturalTop","parentHeight","prevHeight","nodeHeight","mode","undefined","getOffsets","offsetBottom","style","lowestPossible","max","min","onChangeMode","switchToStickyBottom","switchToStickyTop","_","deprecatedOffset","render","children","className","React","Component","defaultProps"],"mappings":"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"}