{"ast":null,"code":"import _classCallCheck from \"/Users/richardflynn/Documents/js-workspace/react/spinshop/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/richardflynn/Documents/js-workspace/react/spinshop/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/richardflynn/Documents/js-workspace/react/spinshop/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/richardflynn/Documents/js-workspace/react/spinshop/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/richardflynn/Documents/js-workspace/react/spinshop/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport React, { Component } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { connect } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\nimport PaypalExpressBtn from 'react-paypal-express-checkout';\nimport SimpleReactValidator from 'simple-react-validator';\nimport Breadcrumb from \"../common/breadcrumb\";\nimport { removeFromWishlist } from '../../actions';\nimport { getCartTotal, bxView, bxIdenfify, bxCheckout } from \"../../services\";\nimport LoadingBar from 'react-top-loading-bar';\n\nvar checkOut =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(checkOut, _Component);\n\n  function checkOut(props) {\n    var _this;\n\n    _classCallCheck(this, checkOut);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(checkOut).call(this, props));\n\n    _this.setStateFromInput = function (event) {\n      console.log('event');\n      var obj = {};\n      obj[event.target.name] = event.target.value;\n\n      _this.setState(obj);\n    };\n\n    _this.setStateFromCheckbox = function (event) {\n      var obj = {};\n      obj[event.target.name] = event.target.checked;\n\n      _this.setState(obj);\n\n      if (!_this.validator.fieldValid(event.target.name)) {\n        _this.validator.showMessages();\n      }\n    };\n\n    _this.sleep = function (milliseconds) {\n      setTimeout(function () {}, 3000);\n    };\n\n    _this.StripeClick = function (email, fname, lname) {\n      var bxIdentifyEvent = function bxIdentifyEvent(email, fname, lname) {\n        bxIdenfify(email, fname, lname);\n      };\n\n      bxIdentifyEvent(email, fname, lname);\n      bxCheckout(_this.props.cartItems);\n\n      _this.LoadingBar.continuousStart();\n\n      _this.sleep(3000);\n\n      _this.props.history.push({\n        pathname: '/order-success',\n        state: {\n          payment: {},\n          items: _this.props.cartItems,\n          orderTotal: _this.props.total,\n          symbol: _this.props.symbol\n        }\n      });\n\n      if (_this.validator.allValid()) {\n        alert('You submitted the form and stuff!');\n\n        _this.props.history.push({\n          pathname: '/order-success',\n          state: {\n            payment: {},\n            items: _this.props.cartItems,\n            orderTotal: _this.props.total,\n            symbol: _this.props.symbol\n          }\n        }); // var handler = (window).StripeCheckout.configure({\n        //     key: 'pk_test_glxk17KhP7poKIawsaSgKtsL',\n        //     locale: 'auto',\n        //     token: (token: any) => {\n        //         console.log(token)\n        //           this.props.history.push({\n        //               pathname: '/order-success',\n        //                   state: { payment: token, items: this.props.cartItems, orderTotal: this.props.total, symbol: this.props.symbol }\n        //           })\n        //     }\n        //   });\n        //   handler.open({\n        //     name: 'Multikart',\n        //     description: 'Online Fashion Store',\n        //     amount: this.amount * 100\n        //   })\n\n      } else {\n        _this.validator.showMessages(); // rerender to show messages for the first time\n\n\n        _this.forceUpdate();\n      }\n    };\n\n    _this.state = {\n      payment: 'stripe',\n      first_name: '',\n      last_name: '',\n      phone: '',\n      email: '',\n      country: '',\n      address: '',\n      city: '',\n      state: '',\n      pincode: '',\n      create_account: ''\n    };\n    _this.validator = new SimpleReactValidator();\n    return _this;\n  }\n\n  _createClass(checkOut, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      bxView('CHEKOUT');\n    }\n  }, {\n    key: \"checkhandle\",\n    value: function checkhandle(value) {\n      this.setState({\n        payment: value\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          cartItems = _this$props.cartItems,\n          symbol = _this$props.symbol,\n          total = _this$props.total; // Paypal Integration\n\n      var onSuccess = function onSuccess(payment) {\n        console.log(\"The payment was succeeded!\", payment);\n\n        _this2.props.history.push({\n          pathname: '/order-success',\n          state: {\n            payment: payment,\n            items: cartItems,\n            orderTotal: total,\n            symbol: symbol\n          }\n        });\n\n        bxIdenfify(_this2.state.email, _this2.state.first_name, _this2.state.last_name);\n      };\n\n      var onCancel = function onCancel(data) {\n        console.log('The payment was cancelled!', data);\n      };\n\n      var onError = function onError(err) {\n        console.log(\"Error!\", err);\n      };\n\n      var client = {\n        sandbox: 'AZ4S98zFa01vym7NVeo_qthZyOnBhtNvQDsjhaZSMH-2_Y9IAJFbSD3HPueErYqN8Sa8WYRbjP7wWtd_',\n        production: 'AZ4S98zFa01vym7NVeo_qthZyOnBhtNvQDsjhaZSMH-2_Y9IAJFbSD3HPueErYqN8Sa8WYRbjP7wWtd_'\n      };\n      return React.createElement(\"div\", null, React.createElement(LoadingBar, {\n        height: 3,\n        color: \"#f11946\",\n        onRef: function onRef(ref) {\n          return _this2.LoadingBar = ref;\n        }\n      }), React.createElement(Helmet, null, React.createElement(\"title\", null, \" CheckOut\"), React.createElement(\"meta\", {\n        name: \"description\",\n        content: \"Multikart \\u2013 Multipurpose eCommerce React Template is a multi-use React template. It is designed to go well with multi-purpose websites. Multikart Bootstrap 4 Template will help you run multiple businesses.\"\n      })), React.createElement(Breadcrumb, {\n        title: 'Checkout'\n      }), React.createElement(\"section\", {\n        className: \"section-b-space\"\n      }, React.createElement(\"div\", {\n        className: \"container padding-cls\"\n      }, React.createElement(\"div\", {\n        className: \"checkout-page\"\n      }, React.createElement(\"div\", {\n        className: \"checkout-form\"\n      }, React.createElement(\"form\", null, React.createElement(\"div\", {\n        className: \"checkout row\"\n      }, React.createElement(\"div\", {\n        className: \"col-lg-6 col-sm-12 col-xs-12\"\n      }, React.createElement(\"div\", {\n        className: \"checkout-title\"\n      }, React.createElement(\"h3\", null, \"Billing Details\")), React.createElement(\"div\", {\n        className: \"row check-out\"\n      }, React.createElement(\"div\", {\n        className: \"form-group col-md-6 col-sm-6 col-xs-12\"\n      }, React.createElement(\"div\", {\n        className: \"field-label\"\n      }, \"First Name\"), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"first_name\",\n        value: this.state.first_name,\n        onChange: this.setStateFromInput\n      }), this.validator.message('first_name', this.state.first_name, 'required|alpha')), React.createElement(\"div\", {\n        className: \"form-group col-md-6 col-sm-6 col-xs-12\"\n      }, React.createElement(\"div\", {\n        className: \"field-label\"\n      }, \"Last Name\"), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"last_name\",\n        value: this.state.last_name,\n        onChange: this.setStateFromInput\n      }), this.validator.message('last_name', this.state.last_name, 'required|alpha')), React.createElement(\"div\", {\n        className: \"form-group col-md-6 col-sm-6 col-xs-12\"\n      }, React.createElement(\"div\", {\n        className: \"field-label\"\n      }, \"Phone\"), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"phone\",\n        value: this.state.phone,\n        onChange: this.setStateFromInput\n      }), this.validator.message('phone', this.state.phone, 'required|phone')), React.createElement(\"div\", {\n        className: \"form-group col-md-6 col-sm-6 col-xs-12\"\n      }, React.createElement(\"div\", {\n        className: \"field-label\"\n      }, \"Email Address\"), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"email\",\n        value: this.state.email,\n        onChange: this.setStateFromInput\n      }), this.validator.message('email', this.state.email, 'required|email')), React.createElement(\"div\", {\n        className: \"form-group col-md-12 col-sm-12 col-xs-12\"\n      }, React.createElement(\"div\", {\n        className: \"field-label\"\n      }, \"Country\"), React.createElement(\"select\", {\n        name: \"country\",\n        value: this.state.country,\n        onChange: this.setStateFromInput\n      }, React.createElement(\"option\", null, \"India\"), React.createElement(\"option\", null, \"South Africa\"), React.createElement(\"option\", null, \"United State\"), React.createElement(\"option\", null, \"Australia\")), this.validator.message('country', this.state.country, 'required')), React.createElement(\"div\", {\n        className: \"form-group col-md-12 col-sm-12 col-xs-12\"\n      }, React.createElement(\"div\", {\n        className: \"field-label\"\n      }, \"Address\"), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"address\",\n        value: this.state.address,\n        onChange: this.setStateFromInput,\n        placeholder: \"Street address\"\n      }), this.validator.message('address', this.state.address, 'required|min:20|max:120')), React.createElement(\"div\", {\n        className: \"form-group col-md-12 col-sm-12 col-xs-12\"\n      }, React.createElement(\"div\", {\n        className: \"field-label\"\n      }, \"Town/City\"), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"city\",\n        value: this.state.city,\n        onChange: this.setStateFromInput\n      }), this.validator.message('city', this.state.city, 'required|alpha')), React.createElement(\"div\", {\n        className: \"form-group col-md-12 col-sm-6 col-xs-12\"\n      }, React.createElement(\"div\", {\n        className: \"field-label\"\n      }, \"State / County\"), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"state\",\n        value: this.state.state,\n        onChange: this.setStateFromInput\n      }), this.validator.message('state', this.state.state, 'required|alpha')), React.createElement(\"div\", {\n        className: \"form-group col-md-12 col-sm-6 col-xs-12\"\n      }, React.createElement(\"div\", {\n        className: \"field-label\"\n      }, \"Postal Code\"), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"pincode\",\n        value: this.state.spincode,\n        onChange: this.setStateFromInput\n      }), this.validator.message('pincode', this.state.pincode, 'required|integer')), React.createElement(\"div\", {\n        className: \"form-group col-lg-12 col-md-12 col-sm-12 col-xs-12\"\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        name: \"create_account\",\n        id: \"account-option\",\n        checked: this.state.create_account,\n        onChange: this.setStateFromCheckbox\n      }), \"\\u2002 \", React.createElement(\"label\", {\n        htmlFor: \"account-option\"\n      }, \"Create An Account?\"), this.validator.message('checkbox', this.state.create_account, 'create_account')))), React.createElement(\"div\", {\n        className: \"col-lg-6 col-sm-12 col-xs-12\"\n      }, React.createElement(\"div\", {\n        className: \"checkout-details\"\n      }, React.createElement(\"div\", {\n        className: \"order-box\"\n      }, React.createElement(\"div\", {\n        className: \"title-box\"\n      }, React.createElement(\"div\", null, \"Product \", React.createElement(\"span\", null, \" Total\"))), React.createElement(\"ul\", {\n        className: \"qty\"\n      }, cartItems.map(function (item, index) {\n        return React.createElement(\"li\", {\n          key: index\n        }, item.name, \" \\xD7 \", item.qty, \" \", React.createElement(\"span\", null, symbol, \" \", item.sum));\n      })), React.createElement(\"ul\", {\n        className: \"sub-total\"\n      }, React.createElement(\"li\", null, \"Subtotal \", React.createElement(\"span\", {\n        className: \"count\"\n      }, symbol, total)), React.createElement(\"li\", null, \"Shipping \", React.createElement(\"div\", {\n        className: \"shipping\"\n      }, React.createElement(\"div\", {\n        className: \"shopping-option\"\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        name: \"free-shipping\",\n        id: \"free-shipping\"\n      }), React.createElement(\"label\", {\n        htmlFor: \"free-shipping\"\n      }, \"Free Shipping\")), React.createElement(\"div\", {\n        className: \"shopping-option\"\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        name: \"local-pickup\",\n        id: \"local-pickup\"\n      }), React.createElement(\"label\", {\n        htmlFor: \"local-pickup\"\n      }, \"Local Pickup\"))))), React.createElement(\"ul\", {\n        className: \"total\"\n      }, React.createElement(\"li\", null, \"Total \", React.createElement(\"span\", {\n        className: \"count\"\n      }, symbol, total)))), React.createElement(\"div\", {\n        className: \"payment-box\"\n      }, React.createElement(\"div\", {\n        className: \"upper-box\"\n      }, React.createElement(\"div\", {\n        className: \"payment-options\"\n      }, React.createElement(\"ul\", null, React.createElement(\"li\", null, React.createElement(\"div\", {\n        className: \"radio-option stripe\"\n      }, React.createElement(\"input\", {\n        type: \"radio\",\n        name: \"payment-group\",\n        id: \"payment-2\",\n        defaultChecked: true,\n        onClick: function onClick() {\n          return _this2.checkhandle('stripe');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"payment-2\"\n      }, \"Stripe\"))), React.createElement(\"li\", null, React.createElement(\"div\", {\n        className: \"radio-option paypal\"\n      }, React.createElement(\"input\", {\n        type: \"radio\",\n        name: \"payment-group\",\n        id: \"payment-1\",\n        onClick: function onClick() {\n          return _this2.checkhandle('paypal');\n        }\n      }), React.createElement(\"label\", {\n        htmlFor: \"payment-1\"\n      }, \"PayPal\", React.createElement(\"span\", {\n        className: \"image\"\n      }, React.createElement(\"img\", {\n        src: \"\".concat(process.env.PUBLIC_URL, \"/assets/images/paypal.png\"),\n        alt: \"\"\n      })))))))), total !== 0 ? React.createElement(\"div\", {\n        className: \"text-right\"\n      }, this.state.payment === 'stripe' ? React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn-solid btn\",\n        onClick: function onClick() {\n          return _this2.StripeClick(_this2.state.email, _this2.state.first_name, _this2.state.last_name);\n        }\n      }, \"Place Order\") : React.createElement(PaypalExpressBtn, {\n        env: 'sandbox',\n        client: client,\n        currency: 'USD',\n        total: total,\n        onError: onError,\n        onSuccess: onSuccess,\n        onCancel: onCancel\n      })) : '')))), React.createElement(\"div\", {\n        className: \"row section-t-space\"\n      }, React.createElement(\"div\", {\n        className: \"col-lg-6\"\n      }, React.createElement(\"div\", {\n        className: \"stripe-section\"\n      }, React.createElement(\"h5\", null, \"stripe js example\"), React.createElement(\"div\", null, React.createElement(\"h5\", {\n        className: \"checkout_class\"\n      }, \"dummy test\"), React.createElement(\"table\", null, React.createElement(\"tbody\", null, React.createElement(\"tr\", null, React.createElement(\"td\", null, \"cart number\"), React.createElement(\"td\", null, \"4242424242424242\")), React.createElement(\"tr\", null, React.createElement(\"td\", null, \"mm/yy\"), React.createElement(\"td\", null, \"2/2020\")), React.createElement(\"tr\", null, React.createElement(\"td\", null, \"cvc\"), React.createElement(\"td\", null, \"2222\"))))))), React.createElement(\"div\", {\n        className: \"col-lg-6 m-sm-t-2\"\n      }, React.createElement(\"div\", {\n        className: \"stripe-section\"\n      }, React.createElement(\"h5\", null, \"paypal example\"), React.createElement(\"div\", null, React.createElement(\"h5\", {\n        className: \"checkout_class\"\n      }, \"dummy test\"), React.createElement(\"table\", null, React.createElement(\"tbody\", null, React.createElement(\"tr\", null, React.createElement(\"td\", null, \"cart number\"), React.createElement(\"td\", null, \"4152521541244\")), React.createElement(\"tr\", null, React.createElement(\"td\", null, \"mm/yy\"), React.createElement(\"td\", null, \"11/18\")), React.createElement(\"tr\", null, React.createElement(\"td\", null, \"cvc\"), React.createElement(\"td\", null, \"521\"))))))))))))));\n    }\n  }]);\n\n  return checkOut;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    cartItems: state.cartList.cart,\n    symbol: state.data.symbol,\n    total: getCartTotal(state.cartList.cart)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  removeFromWishlist: removeFromWishlist\n})(checkOut);","map":{"version":3,"sources":["/Users/richardflynn/Documents/js-workspace/react/spinshop/src/components/checkout/index.jsx"],"names":["React","Component","Helmet","connect","Link","Redirect","PaypalExpressBtn","SimpleReactValidator","Breadcrumb","removeFromWishlist","getCartTotal","bxView","bxIdenfify","bxCheckout","LoadingBar","checkOut","props","setStateFromInput","event","console","log","obj","target","name","value","setState","setStateFromCheckbox","checked","validator","fieldValid","showMessages","sleep","milliseconds","setTimeout","StripeClick","email","fname","lname","bxIdentifyEvent","cartItems","continuousStart","history","push","pathname","state","payment","items","orderTotal","total","symbol","allValid","alert","forceUpdate","first_name","last_name","phone","country","address","city","pincode","create_account","onSuccess","onCancel","data","onError","err","client","sandbox","production","ref","message","spincode","map","item","index","qty","sum","checkhandle","process","env","PUBLIC_URL","mapStateToProps","cartList","cart"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Helmet } from 'react-helmet'\r\nimport { connect } from 'react-redux'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport PaypalExpressBtn from 'react-paypal-express-checkout';\r\nimport SimpleReactValidator from 'simple-react-validator';\r\n\r\nimport Breadcrumb from \"../common/breadcrumb\";\r\nimport { removeFromWishlist } from '../../actions'\r\nimport { getCartTotal, bxView, bxIdenfify, bxCheckout } from \"../../services\";\r\nimport LoadingBar from 'react-top-loading-bar';\r\n\r\n\r\n\r\nclass checkOut extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            payment: 'stripe',\r\n            first_name: '',\r\n            last_name: '',\r\n            phone: '',\r\n            email: '',\r\n            country: '',\r\n            address: '',\r\n            city: '',\r\n            state: '',\r\n            pincode: '',\r\n            create_account: ''\r\n        }\r\n        this.validator = new SimpleReactValidator();\r\n    }\r\n\r\n    componentDidMount() {\r\n        bxView('CHEKOUT');\r\n    }\r\n\r\n    setStateFromInput = (event) => {\r\n        console.log('event');\r\n        var obj = {};\r\n        obj[event.target.name] = event.target.value;\r\n        this.setState(obj);\r\n\r\n    }\r\n\r\n    setStateFromCheckbox = (event) => {\r\n        var obj = {};\r\n        obj[event.target.name] = event.target.checked;\r\n        this.setState(obj);\r\n\r\n        if (!this.validator.fieldValid(event.target.name)) {\r\n            this.validator.showMessages();\r\n        }\r\n    }\r\n\r\n    checkhandle(value) {\r\n        this.setState({\r\n            payment: value\r\n        })\r\n    }\r\n\r\n    sleep = (milliseconds) => {\r\n        setTimeout(function(){  }, 3000);\r\n    }\r\n\r\n\r\n\r\n    StripeClick = (email, fname, lname) => {\r\n\r\n        const bxIdentifyEvent = (email, fname, lname) => {\r\n            bxIdenfify(email, fname, lname);\r\n        }\r\n        bxIdentifyEvent(email, fname, lname);\r\n        bxCheckout(this.props.cartItems);\r\n\r\n\r\n        this.LoadingBar.continuousStart();\r\n\r\n        this.sleep(3000);\r\n\r\n\r\n        this.props.history.push({\r\n            pathname: '/order-success',\r\n            state: { payment: {}, items: this.props.cartItems, orderTotal: this.props.total, symbol: this.props.symbol }\r\n        })\r\n\r\n      \r\n\r\n\r\n        if (this.validator.allValid()) {\r\n            alert('You submitted the form and stuff!');\r\n\r\n            this.props.history.push({\r\n                pathname: '/order-success',\r\n                state: { payment: {}, items: this.props.cartItems, orderTotal: this.props.total, symbol: this.props.symbol }\r\n            })\r\n\r\n\r\n            // var handler = (window).StripeCheckout.configure({\r\n            //     key: 'pk_test_glxk17KhP7poKIawsaSgKtsL',\r\n            //     locale: 'auto',\r\n            //     token: (token: any) => {\r\n            //         console.log(token)\r\n            //           this.props.history.push({\r\n            //               pathname: '/order-success',\r\n            //                   state: { payment: token, items: this.props.cartItems, orderTotal: this.props.total, symbol: this.props.symbol }\r\n            //           })\r\n            //     }\r\n            //   });\r\n            //   handler.open({\r\n            //     name: 'Multikart',\r\n            //     description: 'Online Fashion Store',\r\n            //     amount: this.amount * 100\r\n            //   })\r\n        }\r\n        else {\r\n            this.validator.showMessages();\r\n            // rerender to show messages for the first time\r\n            this.forceUpdate();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { cartItems, symbol, total } = this.props;\r\n\r\n        // Paypal Integration\r\n        const onSuccess = (payment) => {\r\n            console.log(\"The payment was succeeded!\", payment);\r\n            this.props.history.push({\r\n                pathname: '/order-success',\r\n                state: { payment: payment, items: cartItems, orderTotal: total, symbol: symbol }\r\n            })\r\n            bxIdenfify(this.state.email, this.state.first_name, this.state.last_name)\r\n        }\r\n\r\n        const onCancel = (data) => {\r\n            console.log('The payment was cancelled!', data);\r\n        }\r\n\r\n        const onError = (err) => {\r\n            console.log(\"Error!\", err);\r\n        }\r\n\r\n        const client = {\r\n            sandbox: 'AZ4S98zFa01vym7NVeo_qthZyOnBhtNvQDsjhaZSMH-2_Y9IAJFbSD3HPueErYqN8Sa8WYRbjP7wWtd_',\r\n            production: 'AZ4S98zFa01vym7NVeo_qthZyOnBhtNvQDsjhaZSMH-2_Y9IAJFbSD3HPueErYqN8Sa8WYRbjP7wWtd_',\r\n        }\r\n\r\n\r\n\r\n        return (\r\n            <div>\r\n\r\n                <LoadingBar\r\n                    height={3}\r\n                    color='#f11946'\r\n                    onRef={ref => (this.LoadingBar = ref)}\r\n                />\r\n\r\n                {/*SEO Support*/}\r\n                <Helmet>\r\n                    <title> CheckOut</title>\r\n                    <meta name=\"description\" content=\"Multikart – Multipurpose eCommerce React Template is a multi-use React template. It is designed to go well with multi-purpose websites. Multikart Bootstrap 4 Template will help you run multiple businesses.\" />\r\n                </Helmet>\r\n                {/*SEO Support End */}\r\n\r\n                <Breadcrumb title={'Checkout'} />\r\n\r\n                <section className=\"section-b-space\">\r\n                    <div className=\"container padding-cls\">\r\n                        <div className=\"checkout-page\">\r\n                            <div className=\"checkout-form\">\r\n                                <form>\r\n                                    <div className=\"checkout row\">\r\n                                        <div className=\"col-lg-6 col-sm-12 col-xs-12\">\r\n                                            <div className=\"checkout-title\">\r\n                                                <h3>Billing Details</h3>\r\n                                            </div>\r\n                                            <div className=\"row check-out\">\r\n                                                <div className=\"form-group col-md-6 col-sm-6 col-xs-12\">\r\n                                                    <div className=\"field-label\">First Name</div>\r\n                                                    <input type=\"text\" name=\"first_name\" value={this.state.first_name} onChange={this.setStateFromInput} />\r\n                                                    {this.validator.message('first_name', this.state.first_name, 'required|alpha')}\r\n                                                </div>\r\n                                                <div className=\"form-group col-md-6 col-sm-6 col-xs-12\">\r\n                                                    <div className=\"field-label\">Last Name</div>\r\n                                                    <input type=\"text\" name=\"last_name\" value={this.state.last_name} onChange={this.setStateFromInput} />\r\n                                                    {this.validator.message('last_name', this.state.last_name, 'required|alpha')}\r\n                                                </div>\r\n                                                <div className=\"form-group col-md-6 col-sm-6 col-xs-12\">\r\n                                                    <div className=\"field-label\">Phone</div>\r\n                                                    <input type=\"text\" name=\"phone\" value={this.state.phone} onChange={this.setStateFromInput} />\r\n                                                    {this.validator.message('phone', this.state.phone, 'required|phone')}\r\n                                                </div>\r\n                                                <div className=\"form-group col-md-6 col-sm-6 col-xs-12\">\r\n                                                    <div className=\"field-label\">Email Address</div>\r\n                                                    <input type=\"text\" name=\"email\" value={this.state.email} onChange={this.setStateFromInput} />\r\n                                                    {this.validator.message('email', this.state.email, 'required|email')}\r\n                                                </div>\r\n                                                <div className=\"form-group col-md-12 col-sm-12 col-xs-12\">\r\n                                                    <div className=\"field-label\">Country</div>\r\n                                                    <select name=\"country\" value={this.state.country} onChange={this.setStateFromInput}\r\n                                                    >\r\n                                                        <option>India</option>\r\n                                                        <option>South Africa</option>\r\n                                                        <option>United State</option>\r\n                                                        <option>Australia</option>\r\n                                                    </select>\r\n                                                    {this.validator.message('country', this.state.country, 'required')}\r\n                                                </div>\r\n                                                <div className=\"form-group col-md-12 col-sm-12 col-xs-12\">\r\n                                                    <div className=\"field-label\">Address</div>\r\n                                                    <input type=\"text\" name=\"address\" value={this.state.address} onChange={this.setStateFromInput} placeholder=\"Street address\" />\r\n                                                    {this.validator.message('address', this.state.address, 'required|min:20|max:120')}\r\n                                                </div>\r\n                                                <div className=\"form-group col-md-12 col-sm-12 col-xs-12\">\r\n                                                    <div className=\"field-label\">Town/City</div>\r\n                                                    <input type=\"text\" name=\"city\" value={this.state.city} onChange={this.setStateFromInput} />\r\n                                                    {this.validator.message('city', this.state.city, 'required|alpha')}\r\n                                                </div>\r\n                                                <div className=\"form-group col-md-12 col-sm-6 col-xs-12\">\r\n                                                    <div className=\"field-label\">State / County</div>\r\n                                                    <input type=\"text\" name=\"state\" value={this.state.state} onChange={this.setStateFromInput} />\r\n                                                    {this.validator.message('state', this.state.state, 'required|alpha')}\r\n                                                </div>\r\n                                                <div className=\"form-group col-md-12 col-sm-6 col-xs-12\">\r\n                                                    <div className=\"field-label\">Postal Code</div>\r\n                                                    <input type=\"text\" name=\"pincode\" value={this.state.spincode} onChange={this.setStateFromInput} />\r\n                                                    {this.validator.message('pincode', this.state.pincode, 'required|integer')}\r\n                                                </div>\r\n                                                <div className=\"form-group col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n                                                    <input type=\"checkbox\" name=\"create_account\" id=\"account-option\" checked={this.state.create_account} onChange={this.setStateFromCheckbox} />\r\n                                                    &ensp; <label htmlFor=\"account-option\">Create An Account?</label>\r\n                                                    {this.validator.message('checkbox', this.state.create_account, 'create_account')}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-lg-6 col-sm-12 col-xs-12\">\r\n                                            <div className=\"checkout-details\">\r\n                                                <div className=\"order-box\">\r\n                                                    <div className=\"title-box\">\r\n                                                        <div>Product <span> Total</span></div>\r\n                                                    </div>\r\n                                                    <ul className=\"qty\">\r\n                                                        {cartItems.map((item, index) => {\r\n                                                            return <li key={index}>{item.name} × {item.qty} <span>{symbol} {item.sum}</span></li>\r\n                                                        })\r\n                                                        }\r\n                                                    </ul>\r\n                                                    <ul className=\"sub-total\">\r\n                                                        <li>Subtotal <span className=\"count\">{symbol}{total}</span></li>\r\n                                                        <li>Shipping <div className=\"shipping\">\r\n                                                            <div className=\"shopping-option\">\r\n                                                                <input type=\"checkbox\" name=\"free-shipping\" id=\"free-shipping\" />\r\n                                                                <label htmlFor=\"free-shipping\">Free Shipping</label>\r\n                                                            </div>\r\n                                                            <div className=\"shopping-option\">\r\n                                                                <input type=\"checkbox\" name=\"local-pickup\" id=\"local-pickup\" />\r\n                                                                <label htmlFor=\"local-pickup\">Local Pickup</label>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        </li>\r\n                                                    </ul>\r\n\r\n                                                    <ul className=\"total\">\r\n                                                        <li>Total <span className=\"count\">{symbol}{total}</span></li>\r\n                                                    </ul>\r\n                                                </div>\r\n\r\n                                                <div className=\"payment-box\">\r\n                                                    <div className=\"upper-box\">\r\n                                                        <div className=\"payment-options\">\r\n                                                            <ul>\r\n                                                                <li>\r\n                                                                    <div className=\"radio-option stripe\">\r\n                                                                        <input type=\"radio\" name=\"payment-group\" id=\"payment-2\" defaultChecked={true} onClick={() => this.checkhandle('stripe')} />\r\n                                                                        <label htmlFor=\"payment-2\">Stripe</label>\r\n                                                                    </div>\r\n                                                                </li>\r\n                                                                <li>\r\n                                                                    <div className=\"radio-option paypal\">\r\n                                                                        <input type=\"radio\" name=\"payment-group\" id=\"payment-1\" onClick={() => this.checkhandle('paypal')} />\r\n                                                                        <label htmlFor=\"payment-1\">PayPal<span className=\"image\"><img src={`${process.env.PUBLIC_URL}/assets/images/paypal.png`} alt=\"\" /></span></label>\r\n                                                                    </div>\r\n                                                                </li>\r\n                                                            </ul>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    {(total !== 0) ?\r\n                                                        <div className=\"text-right\">\r\n                                                            {(this.state.payment === 'stripe') ? <button type=\"button\" className=\"btn-solid btn\"\r\n                                                                onClick={() => this.StripeClick(this.state.email, this.state.first_name, this.state.last_name)} >Place Order</button> :\r\n                                                                <PaypalExpressBtn env={'sandbox'} client={client} currency={'USD'} total={total} onError={onError} onSuccess={onSuccess} onCancel={onCancel} />}\r\n                                                        </div>\r\n                                                        : ''}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row section-t-space\">\r\n                                        <div className=\"col-lg-6\">\r\n                                            <div className=\"stripe-section\">\r\n                                                <h5>stripe js example</h5>\r\n                                                <div>\r\n                                                    <h5 className=\"checkout_class\">dummy test</h5>\r\n                                                    <table>\r\n                                                        <tbody>\r\n                                                            <tr>\r\n                                                                <td>cart number</td>\r\n                                                                <td>4242424242424242</td>\r\n                                                            </tr>\r\n                                                            <tr>\r\n                                                                <td>mm/yy</td>\r\n                                                                <td>2/2020</td>\r\n                                                            </tr>\r\n                                                            <tr>\r\n                                                                <td>cvc</td>\r\n                                                                <td>2222</td>\r\n                                                            </tr>\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-lg-6 m-sm-t-2\">\r\n                                            <div className=\"stripe-section\">\r\n                                                <h5>paypal example</h5>\r\n                                                <div>\r\n                                                    <h5 className=\"checkout_class\">dummy test</h5>\r\n                                                    <table>\r\n                                                        <tbody>\r\n                                                            <tr>\r\n                                                                <td>cart number</td>\r\n                                                                <td>4152521541244</td>\r\n                                                            </tr>\r\n                                                            <tr>\r\n                                                                <td>mm/yy</td>\r\n                                                                <td>11/18</td>\r\n                                                            </tr>\r\n                                                            <tr>\r\n                                                                <td>cvc</td>\r\n                                                                <td>521</td>\r\n                                                            </tr>\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    cartItems: state.cartList.cart,\r\n    symbol: state.data.symbol,\r\n    total: getCartTotal(state.cartList.cart)\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { removeFromWishlist }\r\n)(checkOut)"]},"metadata":{},"sourceType":"module"}