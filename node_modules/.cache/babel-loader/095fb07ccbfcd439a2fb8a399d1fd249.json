{"ast":null,"code":"import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport CartPage from '../components/common/headers/common/cart-header';\nimport { removeFromCart } from '../actions';\nimport { getCartTotal } from '../services';\n\nvar CartContainer = function CartContainer(_ref) {\n  var cartList = _ref.cartList,\n      total = _ref.total,\n      symbol = _ref.symbol,\n      _removeFromCart = _ref.removeFromCart;\n  return React.createElement(\"li\", {\n    className: \"onhover-div mobile-cart\"\n  }, React.createElement(\"div\", {\n    className: \"cart-qty-cls\"\n  }, cartList.length), React.createElement(Link, {\n    to: \"\".concat(process.env.PUBLIC_URL, \"/cart\")\n  }, React.createElement(\"img\", {\n    src: \"\".concat(process.env.PUBLIC_URL, \"/assets/images/icon/cart.png\"),\n    className: \"img-fluid\",\n    alt: \"\"\n  }), React.createElement(\"i\", {\n    className: \"fa fa-shopping-cart\"\n  })), React.createElement(\"ul\", {\n    className: \"show-div shopping-cart\"\n  }, cartList.map(function (item, index) {\n    return React.createElement(CartPage, {\n      key: index,\n      item: item,\n      total: total,\n      symbol: symbol,\n      removeFromCart: function removeFromCart() {\n        return _removeFromCart(item);\n      }\n    });\n  }), cartList.length > 0 ? React.createElement(\"div\", null, React.createElement(\"li\", null, React.createElement(\"div\", {\n    className: \"total\"\n  }, React.createElement(\"h5\", null, \"subtotal : \", React.createElement(\"span\", null, symbol, total)))), React.createElement(\"li\", null, React.createElement(\"div\", {\n    className: \"buttons\"\n  }, React.createElement(Link, {\n    to: \"\".concat(process.env.PUBLIC_URL, \"/cart\"),\n    className: \"view-cart\"\n  }, \"view cart\"), React.createElement(Link, {\n    to: \"\".concat(process.env.PUBLIC_URL, \"/checkout\"),\n    className: \"checkout\"\n  }, \"checkout\")))) : React.createElement(\"li\", null, React.createElement(\"h5\", null, \"Your cart is currently empty.\"))));\n};\n\nfunction mapStateToProps(state) {\n  return {\n    cartList: state.cartList.cart,\n    total: getCartTotal(state.cartList.cart),\n    symbol: state.data.symbol\n  };\n}\n\nexport default connect(mapStateToProps, {\n  removeFromCart: removeFromCart\n})(CartContainer);","map":{"version":3,"sources":["/Users/richardflynn/Documents/js-workspace/react/spinshop/src/containers/CartContainer.js"],"names":["React","Component","Link","connect","CartPage","removeFromCart","getCartTotal","CartContainer","cartList","total","symbol","length","process","env","PUBLIC_URL","map","item","index","mapStateToProps","state","cart","data"],"mappings":"AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,OAAOC,QAAP,MAAqB,iDAArB;AACA,SAAQC,cAAR,QAA6B,YAA7B;AACA,SAAQC,YAAR,QAA2B,aAA3B;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB;AAAA,MAAEC,QAAF,QAAEA,QAAF;AAAA,MAAYC,KAAZ,QAAYA,KAAZ;AAAA,MAAmBC,MAAnB,QAAmBA,MAAnB;AAAA,MAA2BL,eAA3B,QAA2BA,cAA3B;AAAA,SACjB;AAAK,IAAA,SAAS,EAAC;AAAf,KAAyC;AAAK,IAAA,SAAS,EAAC;AAAf,KAA+BG,QAAQ,CAACG,MAAxC,CAAzC,EACG,oBAAC,IAAD;AAAM,IAAA,EAAE,YAAKC,OAAO,CAACC,GAAR,CAAYC,UAAjB;AAAR,KAA4C;AAAK,IAAA,GAAG,YAAKF,OAAO,CAACC,GAAR,CAAYC,UAAjB,iCAAR;AAAmE,IAAA,SAAS,EAAC,WAA7E;AAAyF,IAAA,GAAG,EAAC;AAA7F,IAA5C,EACI;AAAG,IAAA,SAAS,EAAC;AAAb,IADJ,CADH,EAGG;AAAI,IAAA,SAAS,EAAC;AAAd,KACMN,QAAQ,CAACO,GAAT,CAAa,UAACC,IAAD,EAAMC,KAAN;AAAA,WACX,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,KAAf;AAAsB,MAAA,IAAI,EAAED,IAA5B;AAAkC,MAAA,KAAK,EAAEP,KAAzC;AAAgD,MAAA,MAAM,EAAEC,MAAxD;AAAgE,MAAA,cAAc,EAAE;AAAA,eAAML,eAAc,CAACW,IAAD,CAApB;AAAA;AAAhF,MADW;AAAA,GAAb,CADN,EAIMR,QAAQ,CAACG,MAAT,GAAkB,CAAnB,GACG,iCACJ,gCACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI,+CAAe,kCAAOD,MAAP,EAAeD,KAAf,CAAf,CADJ,CADJ,CADI,EAMJ,gCACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI,oBAAC,IAAD;AAAM,IAAA,EAAE,YAAKG,OAAO,CAACC,GAAR,CAAYC,UAAjB,UAAR;AAA4C,IAAA,SAAS,EAAC;AAAtD,iBADJ,EAEI,oBAAC,IAAD;AAAM,IAAA,EAAE,YAAKF,OAAO,CAACC,GAAR,CAAYC,UAAjB,cAAR;AAAgD,IAAA,SAAS,EAAC;AAA1D,gBAFJ,CADJ,CANI,CADH,GAcD,gCAAI,gEAAJ,CAlBJ,CAHH,CADiB;AAAA,CAAtB;;AA6BA,SAASI,eAAT,CAAyBC,KAAzB,EAAgC;AAC5B,SAAO;AACHX,IAAAA,QAAQ,EAAEW,KAAK,CAACX,QAAN,CAAeY,IADtB;AAEHX,IAAAA,KAAK,EAAEH,YAAY,CAACa,KAAK,CAACX,QAAN,CAAeY,IAAhB,CAFhB;AAGHV,IAAAA,MAAM,EAAES,KAAK,CAACE,IAAN,CAAWX;AAHhB,GAAP;AAKH;;AAED,eAAeP,OAAO,CAACe,eAAD,EAAkB;AAACb,EAAAA,cAAc,EAAdA;AAAD,CAAlB,CAAP,CAA2CE,aAA3C,CAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\nimport CartPage from '../components/common/headers/common/cart-header'\r\nimport {removeFromCart} from '../actions'\r\nimport {getCartTotal} from '../services'\r\n\r\nconst CartContainer = ({cartList, total, symbol, removeFromCart}) => (\r\n     <li  className=\"onhover-div mobile-cart\"><div className=\"cart-qty-cls\">{cartList.length}</div>\r\n        <Link to={`${process.env.PUBLIC_URL}/cart`}><img src={`${process.env.PUBLIC_URL}/assets/images/icon/cart.png`} className=\"img-fluid\" alt=\"\"/>\r\n            <i className=\"fa fa-shopping-cart\"></i></Link>\r\n        <ul className=\"show-div shopping-cart\">\r\n            { cartList.map((item,index) => (\r\n                <CartPage key={index} item={item} total={total} symbol={symbol} removeFromCart={() => removeFromCart(item)}  />\r\n            ))}\r\n            {(cartList.length > 0) ?\r\n                <div>\r\n            <li>\r\n                <div className=\"total\">\r\n                    <h5>subtotal : <span>{symbol}{total}</span></h5>\r\n                </div>\r\n            </li>\r\n            <li>\r\n                <div className=\"buttons\">\r\n                    <Link to={`${process.env.PUBLIC_URL}/cart`} className=\"view-cart\">view cart</Link>\r\n                    <Link to={`${process.env.PUBLIC_URL}/checkout`} className=\"checkout\">checkout</Link>\r\n                </div>\r\n            </li></div>\r\n                    :\r\n            <li><h5>Your cart is currently empty.</h5></li>}\r\n        </ul>\r\n\r\n    </li>\r\n)\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        cartList: state.cartList.cart,\r\n        total: getCartTotal(state.cartList.cart),\r\n        symbol: state.data.symbol,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {removeFromCart})(CartContainer);\r\n"]},"metadata":{},"sourceType":"module"}